#!/bin/bash
#
# Copyright (c) Citrix Systems 2017. All rights reserved.

set -e

#################################################
# Use this script to open/close port with specified
# protocol.
#
# Usage:
#   ./firewall-port [-6] {open|close} port protocol
#
#################################################

usage() {
    echo $"Usage: $0 [-6] {open|close|check} {port} {protocol}" 1>&2
}

BINARY=iptables
while getopts ":6" option; do
    case $option in
        6)
            BINARY=ip6tables
            ;;
        *)
            usage
            exit 1
            ;;
   esac
   shift
done

OP="$1"
PORT="$2"
PROTOCOL="${3:-tcp}"
RULE="-p $PROTOCOL -m conntrack --ctstate NEW -m $PROTOCOL --dport $PORT -j ACCEPT"

case "$PORT" in
    80)
        CHAIN="RH-Firewall-1-INPUT"
        ;;
    *)
        CHAIN="xapi-INPUT"
        ;;
esac

case "${OP}" in
    open)
        if ! $BINARY -C $CHAIN $RULE 2>/dev/null
        then # first ensure chain exists
            if  $BINARY -N "${CHAIN}" 2>/dev/null
            then #chain did not exist but does now
                $BINARY -A "${CHAIN}" -j RETURN
                $BINARY -I INPUT -j "${CHAIN}"
            fi # assume chain is used if it exists
        $BINARY -I "${CHAIN}" $RULE
        /usr/libexec/iptables/"$BINARY".init save
        fi
        ;;
    close)
        if $BINARY -C $CHAIN $RULE 2>/dev/null
        then # close port  if it was opened 
            $BINARY -D $CHAIN $RULE
            /usr/libexec/iptables/"$BINARY".init save
        fi
        ;;
    check) 
        if [[ -z `$BINARY -S $CHAIN | grep " $PORT "` ]]
        then
            echo "Port $PORT open: true"
        else
            echo "Port $PORT open: false"
        fi
        ;;
    *)
        usage
        exit 1
        ;;
esac

exit 0
