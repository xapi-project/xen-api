OCAML_LIBS    = ../util/version ../idl/ocaml_backend/xapi_client
OCAMLINCLUDES = .. ../idl/ocaml_backend ../idl ../autogen ../xapi ../gpg ../util
OCAMLPACKS    = xml-light2 stdext stunnel http-svr log rpc-light oUnit

UseCamlp4(rpc-light.idl, network_interface)
UseCamlp4(rpc-light.syntax, network_server network_monitor)

# Name of daemon to install in dom0:
NETWORKD = xcp-networkd
NETWORK_TEST = network_test
NETWORKD_DB = networkd_db

NETWORKD_FILES = networkd network_utils network_interface network_server network_config \
	network_monitor network_monitor_thread
OCAML_CLIBS = link_stubs

StaticCLibrary(link_stubs, link_stubs)
OCamlLibraryClib(network_utils, network_utils, link_stubs)

OCamlProgram($(NETWORKD), $(NETWORKD_FILES))
OCamlDocProgram($(NETWORKD), $(NETWORKD_FILES))
OCamlProgram($(NETWORK_TEST), ../fhs network_test network_interface)
OCamlProgram($(NETWORKD_DB), network_interface network_config networkd_db)

.PHONY: install
install:
	mkdir -p $(DESTDIR)$(LIBEXECDIR)
	$(IPROG) $(NETWORKD) $(DESTDIR)$(LIBEXECDIR)
	$(IPROG) $(NETWORKD_DB) $(DESTDIR)$(LIBEXECDIR)
	mkdir -p $(DESTDIR)$(OPTDIR)/bin

.PHONY: test
test: $(NETWORK_TEST)

.PHONY: clean
clean:
	rm -f *.cmi *.cmx *.cmo *.a *.cma *.cmxa *.run *.opt *.annot *.o *.rej *.orig *.spit *.spot *.omc
	rm -f $(NETWORKD) $(NETWORK_TEST) xcp-networkd-reopen-logs

