OCAML_LIBS    =
OCAMLINCLUDES = 
OCAMLPACKS    = str xml-light2 log netdev

.SUBDIRS:geneva

OCamlProgram(test_host, util test_host commands cliops parsers tests testlog log networks)
OCamlProgram(gtclient, gtmessages gtcomms gtclient)
OCamlProgram(gtserver_linux, gtmessages gtcomms gtlinuxops gtserver_linux)
OCamlProgram(gtserver_win, gtmessages gtcomms gtwindowsops gtserver_win)
OCamlProgram(stress_test, stress_test util parsers commands testlog cliops)
OCamlProgram(xgetip, getip)


.PHONY: clean
clean:
	rm -f *.cmi *.cmx *.cmo *.a *.cma *.cmxa *.run *.opt *.annot *.o

.PHONY: install
install:
	rm -rf $(DESTDIR)/cli-rt
	mkdir -p $(DESTDIR)/cli-rt/gtserver
	$(IPROG) test_host gtclient xgetip $(DESTDIR)/cli-rt
	cp gtmessages.ml gtcomms.ml gtlinuxops.ml gtserver_linux.ml $(DESTDIR)/cli-rt/gtserver/
	cp Makefile.gtserver $(DESTDIR)/cli-rt/gtserver/Makefile
	# and this is for easier developer testing:
	rm -rf /tmp/cli-rt-domu
	mkdir -p /tmp/cli-rt-domu
	$(IPROG) install.sh /tmp/cli-rt-domu
	mkdir -p /tmp/cli-rt-domu/root
	cp gtmessages.ml gtcomms.ml gtlinuxops.ml gtserver_linux.ml /tmp/cli-rt-domu/root
	(cd $(ROOT)/scripts; /bin/sh ./make-patch /tmp/cli-rt-domu /tmp/cli-rt-domu-shar.sh)
	mkdir -p $(DESTDIR)$(OPTDIR)/debug
	mv /tmp/cli-rt-domu-shar.sh $(DESTDIR)$(OPTDIR)/debug
	$(IPROG) install-debian-pv.sh install-debian-pv-inside.sh $(DESTDIR)$(OPTDIR)/debug
