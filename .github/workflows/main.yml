name: Build and test

on:
  push:
  pull_request:
  schedule:
    # run daily, this refreshes the cache
    - cron: '13 2 * * *'

jobs:
  python-test:
    name: Python tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        docker-image:  # See https://hub.docker.com/_/python/tags for images
          - python:2.7.18-alpine3.11
          - python:3.11.4-alpine3.18
    container: ${{ matrix.docker-image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install python 2 dependencies
        if: ${{ startsWith(matrix.docker-image, 'python:2.7.18') }}
        run: pip install enum

      - name: Install dependencies
        run: pip install mock pytest

      - name: Run python tests
        run: pytest scripts

  ocaml-test:
    name: Ocaml tests
    runs-on: ubuntu-20.04
    env:
      XAPI_VERSION: "v0.0.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull configuration from xs-opam
        run: |
          curl --fail --silent https://raw.githubusercontent.com/xapi-project/xs-opam/master/tools/xs-opam-ci.env | cut -f2 -d " " > .env

      - name: Load environment file
        id: dotenv
        uses: falti/dotenv-action@v1.0.4

      - name: Update Ubuntu repositories
        run: sudo apt-get update

      - name: Use ocaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ steps.dotenv.outputs.ocaml_version_full }}
          opam-repositories: |
            xs-opam: ${{ steps.dotenv.outputs.repository }}
          dune-cache: true

      - name: Install dependencies
        run: opam install . --deps-only --with-test -v

      - name: Configure
        run: opam exec -- ./configure --xapi_version="$XAPI_VERSION"

      - name: Build
        run: opam exec -- make

      - name: Run tests
        run: opam exec -- make test

      - name: Check all code
        run: opam exec -- make check

      - name: Run stress tests
        run: opam exec -- make stresstest
        if: ${{ github.event_name == 'schedule' }}

      - name: Build SDK
        run: |
          mkdir -p /opt/xensource/sm
          wget -O /opt/xensource/sm/XE_SR_ERRORCODES.xml https://raw.githubusercontent.com/xapi-project/sm/master/drivers/XE_SR_ERRORCODES.xml
          opam exec -- make sdk

      - name: Make install smoketest
        run: |
          opam exec -- make install DESTDIR=$(mktemp -d)
          opam exec -- make install DESTDIR=$(mktemp -d) BUILD_PY2=NO

      - name: Sanity test SDK
        run: |
          opam exec -- make sdksanity

      - name: Uninstall unversioned packages and remove pins
        # This should purge them from the cache, unversioned package have
        # 'master' as its version
        run: |
          opam list | awk -F " " '$2 == "master" { print $1 }' |  xargs opam uninstall
          opam pin list | cut -f1 -d "." | xargs opam unpin

  deprecation-test:
    name: Deprecation tests
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate empty configuration for make to be happy
        run: touch config.mk

      - name: quality-gate
        run: make quality-gate

      - uses: reviewdog/action-actionlint@v1
        name: GitHub Action linter from https://github.com/reviewdog/action-actionlint
        with:
          level: error

      - uses: tsuyoshicho/action-mypy@v3
        with:
          reporter: github-pr-review
          level: error
          # mypy reads settings files like .mypy.ini, setup.cfg from this path:
          workdir: .

      - uses: dciborow/action-pylint@0.1.0
        with:
          reporter: github-pr-review
          level: warning
          # To be customized to cover the other Python scripts as well:
          glob_pattern: "scripts/(perfmon|hfx_filename)"
