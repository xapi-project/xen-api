name: Build and test

on:
  push:
  pull_request:
  schedule:
    # run daily, this refreshes the cache
    - cron: "13 2 * * *"

concurrency: # On new push, cancel old workflows from the same PR, branch or tag:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  python-test:
    name: Python tests
    runs-on: ubuntu-22.04
    env:
      PYTHONDEVMODE: yes
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # To check which files changed: origin/master..HEAD
      - uses: LizardByte/setup-python-action@master
        with:
          python-version: ${{matrix.python-version}}

      - uses: actions/cache@v3
        name: Setup cache for running pre-commit fast
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - run: echo "::add-matcher::.github/workflows/python-warning-matcher.json"
        name: "Setup GitHub for reporting Python warnings as annotations in pull request code review"

      - uses: pre-commit/action@v3.0.0
        name: Run pre-commit checks (no spaces at end of lines, etc)
        if: ${{ matrix.python-version != '2.7' }}
        with:
          extra_args: --all-files --verbose --hook-stage commit
        env:
          SKIP: no-commit-to-branch

      - name: Run Pytest for python 2 and get code coverage for Codecov
        if: ${{ matrix.python-version == '2.7' }}
        run: >
          pip install enum future mock pytest-coverage pytest-mock &&
          pytest
          --cov=ocaml/xcp-rrdd
          scripts/ ocaml/xcp-rrdd -vv -rA
          --junitxml=.git/pytest${{matrix.python-version}}.xml
          --cov-report term-missing
          --cov-report xml:.git/coverage${{matrix.python-version}}.xml

      - name: Upload Python ${{matrix.python-version}} coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: .git
          files: coverage${{matrix.python-version}}.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: python${{matrix.python-version}}
          name: coverage${{matrix.python-version}}
          verbose: true

      - uses: dciborow/action-pylint@0.1.0
        if: ${{ matrix.python-version != '2.7' }}
        with:
          reporter: github-pr-review
          level: warning
          # To be customized to cover remaining Python scripts:
          glob_pattern: "**/*.py"

      - name: Run pytype checks
        if: ${{ matrix.python-version != '2.7' }}
        run: pip install pandas pytype toml && ./pytype_reporter.py
        env:
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTYPE_REPORTER_DEBUG: True

      # Try to add pytype_report.py's summary file as a comment to the PR:
      # Documentation: https://github.com/marketplace/actions/add-pr-comment
      - name: Add the pytype summary as a comment to the PR (if permitted)
        uses: mshick/add-pr-comment@v2
        # Depends on pytype checks, which are not run for python 2.7:
        if: ${{ matrix.python-version != '2.7' }}
        # Fails for user workflows without permissions(fork-based pull requests):
        continue-on-error: true
        with:
          message-path: .git/pytype-summary.md # Add the content of it as comment

  ocaml-tests:
    name: Run OCaml tests
    runs-on: ubuntu-20.04
    env:
      # Ensure you also update test-sdk-builds
      # when changing this value, to keep builds
      # consistent
      XAPI_VERSION: "v0.0.0"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup XenAPI environment
        uses: ./.github/workflows/setup-xapi-environment
        with:
          xapi_version: ${{ env.XAPI_VERSION }}

      - name: Build
        run: opam exec -- make

      - name: Run tests
        run: opam exec -- make test

      - name: Check all code
        run: opam exec -- make check

      - name: Run stress tests
        run: opam exec -- make stresstest
        if: ${{ github.event_name == 'schedule' }}

      - name: Make install smoketest
        run: |
          opam exec -- make install DESTDIR=$(mktemp -d)
          opam exec -- make install DESTDIR=$(mktemp -d) BUILD_PY2=NO

      - name: Check disk space
        run: df -h || true

      - name: Cleanup XenAPI environment
        uses: ./.github/workflows/cleanup-xapi-environment

  deprecation-test:
    name: Deprecation tests
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate empty configuration for make to be happy
        run: touch config.mk

      - name: quality-gate
        run: make quality-gate

      - name: pyflakes
        uses: reviewdog/action-pyflakes@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: error

  test-sdk-builds:
    name: Test SDK builds
    uses: ./.github/workflows/generate-and-build-sdks.yml
    with:
      # Ensure you also update ocaml-tests
      # when changing this value, to keep builds
      # consistent
      xapi_version: "v0.0.0"
