#
# Configuration of pre-commit, a Python framework for git hooks.
# pre-commit is run for each git push by GitHub CI. It can run
# locally as well for early feedback and automatic formatting
# like trailing whitespace removal (to be configured later):
#
## For only installing the package itself, run:
# pip3 install pre-commit
#
## For activating it as a pre-commit and pre-push hook (recommended):
# pre-commit install --hook-type pre-push --hook-type pre-commit
#
## For manually executing the pre-push hook:
# pre-commit run -av --hook-stage pre-push
#
default_stages: [commit, push]
default_language_version:
    python: python3.11
repos:
# Recommendation for a minimal git pre-commit hook:
# https://github.com/pre-commit/pre-commit-hooks/blob/main/README.md:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    -   id: no-commit-to-branch
        name: "The master branch should be pulled only, don't commit to it"
        args: [--branch, master]
        always_run: true
    -   id: check-merge-conflict
    -   id: check-yaml
    -   id: check-executables-have-shebangs
        exclude: ocaml


# Improve Python formatting incrementally:
# https://dev.to/akaihola/improving-python-code-incrementally-3f7a
#
# darker checks if staged python changes are formatted according using
# the PEP8-aligned black formatter. It also checks if the imports are sorted.
#
# It is a good idea to run this before committing, and it is also run in the
# GitHub Workflow.
#
# Note: darker only checks the changes in files ending in .py!
# Python scripts that don't end in .py should be renamed to have the .py extension
# when moving them to python3/bin.
# (remove the .py extension in the Makefile when installing the file)
#
-   repo: https://github.com/akaihola/darker
    rev: 1.7.3
    hooks:
    -   id: darker
        files: python3/
        name: check changes in Python3 tree using darker and isort
        args: [--diff, --skip-string-normalization, --isort, -tpy36]
        additional_dependencies: [isort]

#
# Run pytest and diff-cover to check that the new /python3 test suite in passes.
# This hook uses a local venv containing the required dependencies. When adding
# new dependencies, they should be added to the additional_dependencies below.
#
-   repo: local
    hooks:
    -   id: pytest
        files: python3/
        name: check that the Python3 test suite in passes
        entry: env PYTHONDEVMODE=yes sh -c 'python3 -m pytest -vv &&
            diff-cover --ignore-whitespace --compare-branch=origin/feature/py3
            --show-uncovered --html-report .git/coverage-diff.html
            --fail-under 50 .git/coverage3.11.xml'
        require_serial: true
        pass_filenames: false
        language: python
        types: [python]
        additional_dependencies:
        - coverage
        - diff-cover
        - future
        - opentelemetry-api
        - opentelemetry-exporter-zipkin-json
        - opentelemetry-sdk
        - pytest-coverage
        - pytest-mock
        - mock
        - wrapt
        - XenAPI


-   repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.361
    hooks:
    -   id: pyright
        name: check that python3 tree passes pyright/VSCode check
        files: python3/
        additional_dependencies:
        - mock
        - opentelemetry-api
        - opentelemetry-exporter-zipkin-json
        - opentelemetry-sdk
        - pytest
        - pyudev
        - XenAPI


# Check that pylint passes for the changes in new /python3 code.
-   repo: local
    hooks:
    -   id: pylint
        files: python3/
        stages: [push]
        name: check that changes to python3 tree pass pylint
        entry: diff-quality --violations=pylint
            --ignore-whitespace --compare-branch=origin/feature/py3
        pass_filenames: false
        language: python
        types: [python]
        additional_dependencies: [diff-cover, pylint, pytest]


# pre-push hook (it only runs if you install pre-commit as a pre-push hook):
# It can be manually tested using: `pre-commit run -av --hook-stage push`
# Recommendation for a minimal git pre-push hook:
# While using pre-commit yields great results, it
# is "not fast". Therefore only run it pre-push,
# (but always in GitHub CI of course):
#
# Calls ./pytype_reporter.py in a dedicated venv:
# pre-commit run -av --hook-stage push
-   repo: local
    hooks:
    -   id: pytype
        name: pytype
        entry: python3 pytype_reporter.py
        pass_filenames: false
        types: [python]
        stages: [push]
        verbose: true
        # This hook runs locally only when Python files change:
        language: python
        # Pytype supports running on Python 3.8 to Python3.11 currently:
        # https://google.github.io/pytype/support.html
        # If a dev's default python3 interpreter is outside that range, but
        # developers have such version installed, it can be configured here:
        # language_version: python3.11
        require_serial: true
        additional_dependencies:
        - future
        - opentelemetry-api
        - opentelemetry-exporter-zipkin-json
        - opentelemetry-sdk
        - pandas
        - pytest
        - pytype
        files: python3/
